//TREES
import java.util.*;
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data=data;
        this.left=null;
        this.right=null;
    }
}
public class Main {
    public static void leveloreder(Node root){
        //levelordertraversal
        Queue<Node> q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            Node temp=q.poll();
            System.out.print(temp.data+" ");
            if(temp.left!=null){
                q.add(temp.left);
            }
            if(temp.right!=null){
                q.add(temp.right);
            }
        }
    }
    static int sumofleafnodes(Node root){
        if(root==null){
            return 0;
        }
        if(root.left==null&&root.right==null){
            return root.data;
        }
        else{
            return sumofleafnodes(root.left)+sumofleafnodes(root.right);
        }
    }
    static int height(Node root){
        //height of the tree
        if(root==null){
            return 0;
        }
        else{
            int lh=height(root.left);
            int rh=height(root.right);
            return Math.max(lh,rh)+1;
        }
    }
    public static void main(String[] args) {
        System.out.println("Name:Vasamsetti Sai Subhash\nRollno:21BF1A3759");
        Scanner sc=new Scanner(System.in);
        Queue<Node> q=new LinkedList<>();
        Node head=new Node(sc.nextInt());
        q.add(head);
        int val;
        int count=0;
        while(!q.isEmpty()&&count!=3){
            Node temp=q.poll();
            val=sc.nextInt();
            if(val!=-1) {
                temp.left=new Node(val);
                q.add(temp.left);
            }
            val=sc.nextInt();
            if(val!=-1){
                temp.right=new Node(val);
                q.add(temp.right);
            }
            count++;
        }
        System.out.println("height is:"+height(head));
        System.out.println("sum is:"+sumofleafnodes(head));
        leveloreder(head);
    }
}
